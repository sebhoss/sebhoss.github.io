<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>nil</title>
 <link href="https://seb.hoß.de/atom.xml" rel="self"/>
 <link href="https://seb.hoß.de/"/>
 <updated>2013-07-01T18:46:35+02:00</updated>
 <id>https://seb.hoß.de/</id>
 <author>
   <name>Sebastian Hoß</name>
   <email>seb@hoß.de</email>
 </author>

 
 <entry>
   <title>Vaadin Performance Tricks & Tips</title>
   <link href="https://seb.hoß.de//vaadin-performance"/>
   <updated>2012-08-07T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//vaadin-performance</id>
   <content type="html">&lt;p&gt;List known performance tricks for vaadin.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Design by Contract</title>
   <link href="https://seb.hoß.de//design-by-contract"/>
   <updated>2012-08-06T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//design-by-contract</id>
   <content type="html">&lt;p&gt;Show how to use DbC inside Java or on the &lt;span class=&quot;caps&quot;&gt;JVM&lt;/span&gt;.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Data Vault Modelling</title>
   <link href="https://seb.hoß.de//data-vault"/>
   <updated>2012-08-05T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//data-vault</id>
   <content type="html">&lt;h1&gt;Data Vault Modelling&lt;/h1&gt;
&lt;p&gt;Show how to use the Data Vault methodology to model a data warehouse.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Apache Camel on OSGi</title>
   <link href="https://seb.hoß.de//camel-on-osgi"/>
   <updated>2012-08-04T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//camel-on-osgi</id>
   <content type="html">&lt;h1&gt;Apache Camel on OSGi&lt;/h1&gt;
&lt;p&gt;Show how to integrate Apache Camel with OSGi.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Liferay Spring Integration</title>
   <link href="https://seb.hoß.de//liferay-spring-integration"/>
   <updated>2012-08-03T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//liferay-spring-integration</id>
   <content type="html">&lt;h1&gt;Liferay Spring Integration&lt;/h1&gt;
&lt;p&gt;Show how to integrate Liferay and Spring.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Spring-Data-JPA</title>
   <link href="https://seb.hoß.de//spring-data-jpa"/>
   <updated>2012-08-02T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//spring-data-jpa</id>
   <content type="html">&lt;h1&gt;Spring-Data-&lt;span class=&quot;caps&quot;&gt;JPA&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;Auflisten was Spring-Data zusammen mit &lt;span class=&quot;caps&quot;&gt;JPA&lt;/span&gt; so alles kann.&lt;/p&gt;
&lt;p&gt;Konkurrenz, die näher an &lt;span class=&quot;caps&quot;&gt;SQL&lt;/span&gt; ist: http://www.jooq.org/&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Secondary Questions</title>
   <link href="https://seb.hoß.de//secondary-questions"/>
   <updated>2012-08-01T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//secondary-questions</id>
   <content type="html">&lt;h1&gt;Secondary Questions&lt;/h1&gt;
&lt;p&gt;Nebenbedingungen von Projekten und Fragestellungen, die man in diesem Zusammenhang lösen muss.&lt;/p&gt;
&lt;p&gt;- Wo und wie definiert man Testdaten&lt;br /&gt;
- Wie werden Testdaten eingespielt &amp;amp; verifiziert&lt;br /&gt;
- Zugangsberechtigungen für &lt;span class=&quot;caps&quot;&gt;DEV&lt;/span&gt;/&lt;span class=&quot;caps&quot;&gt;TEST&lt;/span&gt;/&lt;span class=&quot;caps&quot;&gt;PROD&lt;/span&gt;-Umgebungen&lt;br /&gt;
- Wer deployed &amp;amp; wie&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Dependency Injection with Spring</title>
   <link href="https://seb.hoß.de//dependency-injection-with-spring"/>
   <updated>2012-07-31T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//dependency-injection-with-spring</id>
   <content type="html">&lt;h1&gt;Dependency Injection with Spring&lt;/h1&gt;
&lt;p&gt;Best-Practices für DI mit Spring.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Workitem Catalog</title>
   <link href="https://seb.hoß.de//workitem-catalog"/>
   <updated>2012-07-30T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//workitem-catalog</id>
   <content type="html">&lt;h1&gt;Workitem Catalog&lt;/h1&gt;
&lt;p&gt;Katalog von Workitems erstellen, der &amp;#8220;Standard&amp;#8221;-Aufgaben auflistet, wie z. B. das Erstellen eines Domänenmodels. Alle Domänenmodelle müssen z. B. equals(), hashCode(), toString() implementieren.&lt;/p&gt;
&lt;p&gt;Für diesen Standard ein Muster suchen, bzw. eventuell erklären.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Spring @Cacheable</title>
   <link href="https://seb.hoß.de//cacheable-spring"/>
   <updated>2012-07-29T00:00:00+02:00</updated>
   <id>https://seb.hoß.de//cacheable-spring</id>
   <content type="html">&lt;h1&gt;Spring @Cacheable&lt;/h1&gt;
&lt;p&gt;Spring 3.1 introduces a powerful caching abstraction.&lt;/p&gt;
&lt;p&gt;@Cacheable Annotation über Methode&lt;/p&gt;
&lt;p&gt;Benutzt Parameter der Methode&lt;/p&gt;
&lt;p&gt;Falls keine Parameter vorhanden sind, muss ein fixer String als Key gegeben werden.&lt;/p&gt;
&lt;p&gt;Konfiguration des Caches per &lt;span class=&quot;caps&quot;&gt;XML&lt;/span&gt;/Java&lt;/p&gt;
&lt;p&gt;2 Caches: ConcurrentHashMap oder EhCache, gibt allerdings noch andere&lt;/p&gt;</content>
 </entry>
 
 
</feed>
